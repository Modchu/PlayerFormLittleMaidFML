package modchu.pflmf;import java.util.HashMap;import java.util.LinkedList;import modchu.lib.Modchu_Debug;import modchu.lib.Modchu_Reflect;import modchu.lib.characteristic.Modchu_AS;import modchu.lib.characteristic.Modchu_CastHelper;public class PFLMF_Client implements PFLMF_IPacketConstant {	public static HashMap<String, LinkedList> playerData = new HashMap();	public static void onPacketData(LinkedList list, Object entityPlayer, String channelName) {		receivePacket(list);	}	public static Object receivePacket(LinkedList list) {		return receivePacket(list, false);	}	public static Object receivePacket(LinkedList list, boolean readOnly) {		if (list !=null				&& !list.isEmpty()); else return null;		byte packetId = Modchu_CastHelper.Byte(list.get(0));		Object entityId = list.size() > 1 ? list.get(1) : null;		if (entityId != null); else return null;		byte by = Modchu_CastHelper.Byte(list.size() > 2 ? list.get(2) : null, (byte) -1);		byte by2 = Modchu_CastHelper.Byte(list.size() > 3 ? list.get(3) : null, (byte) -1);		Object entityId2 = list.size() > 4 ? list.get(4) : null;		if (!readOnly) Modchu_Debug.Debug("PFLMF_Client receivePacket packetId="+packetId+" entityId="+entityId+" by="+by+" by2="+by2+" entityId2="+entityId2);		Object player = getPlayer(entityId2 != null ? entityId2 : entityId);		Object modelData = null;		if (player != null) {			Object instance = Modchu_Reflect.getFieldObject("modchu.pflm.PFLM_ModelDataMaster", "instance");			modelData = Modchu_Reflect.invokeMethod(instance.getClass(), "getPlayerData", new Class[]{ Object.class }, instance, new Object[]{ player });			//Modchu_Debug.lDebug1("PFLMF_Client receivePacket modelData="+modelData);			if (modelData != null) {			} else {				Modchu_Debug.lDebug1("PFLMF_Client receivePacket modelData == null !!");				return null;			}		} else {			Modchu_Debug.lDebug1("PFLMF_Client receivePacket player == null !!");			return null;		}		Object o = null;		if (!readOnly) {			Modchu_Debug.lDebug("PFLMF_Client receivePacket player="+player);			Modchu_Debug.lDebug("PFLMF_Client receivePacket packetId="+packetId);		}		switch (packetId) {		case packet_IDRemove:		case packet_IDLANRemove:			return null;		case packet_IDSitting:		case packet_IDLANSitting:			o = by == 1;			if (!readOnly) Modchu_Debug.Debug("PFLMF_Client receivePacket packet_IDSitting by="+by);			break;		case packet_IDSleeping:		case packet_IDLANSleeping:			o = new Object[]{ by == 1, Modchu_CastHelper.Int(by2) };			if (!readOnly) Modchu_Debug.lDebug("PFLMF_Client receivePacket packet_IDSleeping by == 1 ?"+(by == 1)+" by2="+(Modchu_CastHelper.Int(by2)));			break;		case packet_IDAction:		case packet_IDLANAction:			//if (!readOnly) Modchu_Debug.Debug("PFLMF_Client receivePacket packet_IDAction by="+by);			o = by == 1;			break;		case packet_IDRunActionNumber:		case packet_IDLANRunActionNumber:			//if (!readOnly) Modchu_Debug.Debug("PFLMF_Client receivePacket packet_IDRunActionNumber ="+Modchu_CastHelper.Int(by));			o = Modchu_CastHelper.Int(by);			break;		case packet_IDAll:		case packet_IDLANAll:		case packet_IDNone:			return null;		default:			if (!readOnly) Modchu_Debug.Debug("PFLMF_Client Unknown packetId="+packetId+" found !!");			return null;		}		if (packetId != packet_IDAll				&& packetId != packet_IDLANAll						&& o != null						&& !readOnly) {			if (packetId > 99) packetId = (byte)((int)packetId - 100);			playerData.put(""+entityId+","+packetId, list);		}		return o;	}	private static Object getPlayer(Object entityId) {		return PFLMF_Main.getPlayer(Modchu_AS.get(Modchu_AS.minecraftTheWorld), entityId);	}	public static LinkedList getPlayerState(Object entityId, byte packetId) {		if (playerData.containsKey(""+entityId.toString()+","+packetId)) {			//Modchu_Debug.mdDebug("getPlayerState ok. "+(playerData.get(""+entityId.toString()+","+packetId)), (int) packetId + 2+(Modchu_AS.getUUID(Modchu_AS.entityGetUniqueID, Modchu_AS.get(Modchu_AS.minecraftThePlayer)).toString().equals(entityId.toString()) ? 0 : 5));			return playerData.get(""+entityId.toString()+","+packetId);		}		//Modchu_Debug.mdDebug("getPlayerState null.", (int) packetId + 2+(Modchu_AS.getUUID(Modchu_AS.entityGetUniqueID, Modchu_AS.get(Modchu_AS.minecraftThePlayer)).toString().equals(entityId.toString()) ? 0 : 5));		return null;	}}